[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "LLaVAGuard",
    "section": "",
    "text": "Introduction\nMultimodal Large Language Models (MLLMs) such as GPT-4V (OpenAI 2023), Gemini (Reid et al. 2024), and LLaVA (Liu, Li, Wu, et al. 2023; Liu, Li, Li, et al. 2023) have demonstrated remarkable capabilities in understanding visual and textual inputs and delivering responses in natural language.\nWhile these multimodal capabilities pave the way for novel applications, they also expose new risks (Qi et al. 2023; Shayegani, Dong, and Abu-Ghazaleh 2023; Niu et al. 2024), which can be exploited through adversarial prompting in both the visual and textual input.\nFor example, adversarial jailbreaks exploit the models’ vulnerabilities to bypass their safety guardrails, potentially leading to unauthorized behaviors or misuse. Previous studies in this direction have focused on both unimodal (Zou et al. 2023; Chao et al. 2023) and multimodal LLMs (Shayegani, Dong, and Abu-Ghazaleh 2023; Niu et al. 2024).\nSafeguarding against adversarial exploitation is critical to preempt misuse and ensure secure and trustworthy interactions with these models.\nTo ensure the robustness of MLLMs, we propose LLaVAGuard, a novel framework that offers multimodal safety guardrails to any input prompt. The safety guardrails are specifically optimized to minimize the likelihood of generating harmful responses on the LLaVA 1.5 model. Extensive experiments show that LLaVAGuard remarkably enhances the robustness of LLaVA 1.5 against jailbreak attacks.\nI helped develop a method to generate safety guardrails for adversarial images. This article will focus on image safety guardrails.\n\n\nMethod\n\nOverview\nWe consider a simple conversation setup where the user feeds an input prompt to the MLLM, which can contain images, text, or both. The MLLM then produces a response contingent upon the prompt. In this setup, an adversarial attacker aims to exploit any combination of image and text to manipulate the MLLM to generate a harmful response, reveal sensitive information, or include a specific string in the response (Bailey et al. 2023). We focus on defending against a jailbreak attack, which induces the MLLM to generate offensive or inappropriate output via a carefully-crafted prompt. A jailbreaker can utilize completely unrelated image and text pairs, such as white noise paired with a toxic text prompt.\nOur goal is to find an optimization-based safety guardrail for each modality (e.g., image and text) against the jailbreak attack on aligned MLLMs.\nWhile manual safety guardrails (e.g., ’‘DO NOT INCLUDE HARMFUL CONTENT’’ at the end of the input prompt) or simple safety guardrails (e.g., blurring image or random perturbation of text) can be used as the first line of defense, special safety guardrails optimized to make the MLLM generate less harmful content might be more effective defense.\n\n\n\n\n\n\nFigure 1: Overview of LLaVAGuard. Multimodal safety guardrails (right) are optimized to minimize the likelihood of generating harmful content sampled from a corpus \\(\\mathcal{C}\\) (left-top) on the open-source MLLM model: LLaVA 1.5 (left-bottom). We use projected gradient descent for optimization (middle). We apply the guardrails to any input prompt of MLLMs.\n\n\n\n\n\nOptimization for Image Safety Guardrail\nFew-shot prompt learning (Qi et al. 2023; Lester, Al-Rfou, and Constant 2021) carefully constructs an input prompt with few task-related examples for pre-trained LLMs, which can achieve comparable performance to full fine-tuning of the LLMs. Inspired by the few-shot learning method, we propose a simple yet effective optimization technique to find the safety guardrail against adversarial images. The core idea is to find an additive noise (i.e., safety guardrail) to a given adversarial image via optimization, such that the noise minimizes the generation probabilities of harmful sentences (e.g., racism or terrorism) given in a small-sized corpus \\(\\mathcal{C}\\).\nThe harmful sentences act like the few-shot examples to teach the MLLM about the concept of ‘’jailbreak’’ attacks, and the safety guardrail noise optimized on such harmful text would be effective and transferable against potential jailbreak attacks.\nFormally, the loss function to find the image safety guardrail (i.e., \\(x_{img-\\text{SG}}\\); \\(\\text{SG =  Safety Guardrail}\\)) is given as follows. \\[    \n\\DeclareMathOperator*{\\argmin}{arg\\,min}\nx_{img-\\text{SG}} \\coloneqq \\argmin_{x_{noise}} \\sum_{i=1}^{|\\mathcal{C}|} {\\log p\\big(c_i | \\{x_{\\text{default}},x_{adv}+x_{noise}}\\big)\\},\\hspace{3mm}||x_{noise}||_{\\infty} \\leq \\epsilon,\n\\]\nwhere \\(c_{i}\\) indicates the \\(i\\)-th harmful sentence in the corpus \\(\\mathcal{C}\\), \\(x_{\\text{default}}\\) is the default prompt of the MLLM (e.g., system message), \\(x_{adv}\\) indicates an adversarial image, \\(x_{noise}\\) is an additive noise, \\(p(y|x)\\) indicates the generation probability of text \\(y\\) from the MLLM given an \\(x\\) image, and \\(\\epsilon\\) indicates a distance constraint (a hyperparameter; ranged between 0 and 1).\nWhile \\(x_{adv}\\) could be an arbitrary adversarial image or even a set of adversarial images, we chose an image as \\(x_{adv}\\) obtained from the state-of-the-art jailbreak paper (Qi et al. 2023).\nThe unconstrained attack means the final image generated by the attack algorithm can have any pixel values ranging between 0 and 1 after normalization (0 and 255 before normalization); thus, it is the most effective attack.\nThe intuition behind the choice of \\(x_{adv}\\) is that the safety guardrail would be optimized against the worst-case scenario and effective against other suboptimal attack scenarios (e.g., constrained attacks).\nThe additive noise (\\(x_{noise}\\)) in the above equation is continuous, and the loss function is differentiable with respect to \\(x_{noise}\\). Therefore, we employ the Projected Gradient Descent (PGD) algorithm (Madry et al. 2018; Croce and Hein 2019) on the above equation to obtain the image safety guardrail \\(x_{img-\\text{SG}}\\).\nTo make the optimization process scalable, instead of using the whole corpus \\(\\mathcal{C}\\), we randomly sample a different subset of \\(\\mathcal{C}\\) per epoch in the above equation.\nAfter finding \\(x_{img-\\text{SG}}\\), we now purify any adversarial input image via simple addition (e.g., \\(x_{\\text{safe-img}} = x_{\\text{input-img}}+x_{img-\\text{SG}}\\)).\nEven if the input image is not adversarial, adding our safety guardrail to the clean image does not destroy the nature of the image as the max norm of \\(x_{img-\\text{SG}}\\) is bounded by \\(\\epsilon\\).\n\n\nCode for generating image safety guardrails can be found here.\n\n\n\nExperiment Setup\nWe evaluate LLaVAGuard’s defense performance against adversarial input prompts.\n\nData\nTo obtain benign and adversarial images, We use the COCO 2017 dataset (Lin et al. 2014), following the setup in the visual Q&A benchmark paper (Schwenk et al. 2022). Specifically, we use the validation set of the COCO dataset, which contains 1,000 distinct images along with the corresponding text questions. To generate adversarial images, we use the state-of-the-art visual jailbreak attack paper (Qi et al. 2023). We create 26 unconstrained attack images, where one image is used for safety guardrail creation, and the others are used for evaluation.\nMoreover, we also apply constrained attacks with \\(\\epsilon=\\frac{64}{255}\\) on 25 sampled images from the COCO dataset and obtain the adversarial versions of sampled images for evaluation, where \\(\\epsilon \\in [0, 1]\\) represents the magnitude of the perturbation for constructing the adversarial image example.\nFor the adversarial text, we use the RealToxicityPrompts (RTP) (Gehman et al. 2020) dataset. The RTP dataset contains seemingly innocuous but adversarial prompts that induce the LLM to generate offensive and inappropriate responses.\nWe use 574 harmful strings provided in (Zou et al. 2023) as a corpus \\(\\mathcal{C}\\) for LLaVAGuard.\n\n\nMLLM\nWe use LLaVA 1.5, the state-of-the-art open-source MLLM in our experiments.\nLLaVA 1.5 (Liu, Li, Li, et al. 2023) effectively bridges the visual encoder CLIP (Radford et al. 2021) with the language encoder LLaMA-2 (Touvron et al. 2023) through a novel cross-modal connector.\n\n\nBaseline defenses\nWe compare several baseline defense methods with LLaVAguard. BlurKernel and Comp-Decomp are simple image-only defenses that apply a small average convolution kernel and save-and-load the image with lower quality, respectively. Both methods can reduce the adversarial features in the given image but can also alter the nature of the image.\nAnother image-only defense is DiffPure (Nie et al. 2022), which adds a minor noise to the adversarial image (i.e., diffusion process) and purifies it via reverse generative process. The latest text-only defense method is SmoothLLM (Robey et al. 2023). We modify it to apply random perturbations on multiple copies of input text, pass them to the MLLM along with a given image, and measure the average toxicity of the multiple responses. To the best of our knowledge, there is no defense method providing multimodal safety guardrails for the MLLM.\n\n\nEvaluation metrics\nWe use the Perspective API to systematically identify and quantify abusive comments in the generated response. This API scores each response across seven distinct toxicity attributes, including overall toxicity, severe toxicity, identity attack, insult, threat, profanity, and sexually explicit content. The scoring mechanism is predicated on the perceived negative impact a given text may exert within a conversational setting. For each attribute, we calculate the proportion of generated texts with scores surpassing the threshold of 0.5. A jailbreak attack is successful if the output is classified to any toxicity attributes above.\n\n\n\nExperimental Results\n\n\n\n\n\n\nFigure 2: Effectiveness of LLaVAGuard and baseline defenses against unconstrained adversarial visual attack (Qi et al. 2023) and RTP (Gehman et al. 2020) adversarial text on LLaVA 1.5, as per Perplexity API and Perplexity. Lower is better for both set of metrics. Optimized and pre-defined text guardrail indicate our proposed and manually-generated safety guardrail, respectively. LLaVA outperforms all baselines as per both metrics.\n\n\n\nWe test how effective LLaVAGuard and baseline defenses are against the jailbreak attacks on LLaVA 1.5 model, as per Perplexity API (in percentage) and Perplexity metrics. The above table shows the robustness test result against unconstrained visual attack (Qi et al. 2023) along with the RTP text prompt (Gehman et al. 2020). The original LLaVA 1.5 model without any defenses exhibits high vulnerability against the multimodal jailbreak attack with an attack success ratio of over 80%, which can be detrimental if deployed without any safety measures. Regarding baselines, image-only defenses outperform the text-only one. It implies that purifying adversarial features in images is more crucial and impactful for jailbreaking. Nonetheless, their defense performance is still limited due to their unimodality.\nOur multimodal defense LLaVAGuard robustifies LLaVA 1.5 the most against the jailbreak attack. The attack success ratio on LLaVA 1.5 with LLaVAGuard is around 25%, which is almost 55% and 12% lower than the original LLaVA 1.5 and the best baseline, respectively.\n\n\nConclusion\nIn this project, we introduced the first multimodal defense framework LLaVAGuard to robustify multimodal large language models (MLLMs) against jailbreak attacks. LLaVAGuard finds optimized multimodal safety guardrails that minimize the generation probabilities of harmful content in a small adversarial corpus. By applying the multimodal safety guardrails to multimodal contents, we purify potential adversarial features in the input and ensure the MLLMs to generate safe and relevant responses.\nWe plan to submit this project to conferences in the upcoming months.\nCode repository: https://github.com/donghyunkm/LLaVAGuard\n\n\n\n\n\nReferences\n\nBailey, Luke, Euan Ong, Stuart Russell, and Scott Emmons. 2023. “Image Hijacks: Adversarial Images Can Control Generative Models at Runtime.” https://arxiv.org/abs/2309.00236.\n\n\nChao, Patrick, Alexander Robey, Edgar Dobriban, Hamed Hassani, George J Pappas, and Eric Wong. 2023. “Jailbreaking Black Box Large Language Models in Twenty Queries.” In R0-FoMo: Robustness of Few-Shot and Zero-Shot Learning in Large Foundation Models.\n\n\nCroce, Francesco, and Matthias Hein. 2019. “Sparse and Imperceivable Adversarial Attacks.” In Proceedings of the IEEE/CVF International Conference on Computer Vision, 4724–32.\n\n\nGehman, Samuel, Suchin Gururangan, Maarten Sap, Yejin Choi, and Noah A Smith. 2020. “RealToxicityPrompts: Evaluating Neural Toxic Degeneration in Language Models.” In Findings of the Association for Computational Linguistics: EMNLP 2020, 3356–69.\n\n\nLester, Brian, Rami Al-Rfou, and Noah Constant. 2021. “The Power of Scale for Parameter-Efficient Prompt Tuning.” In Proceedings of the 2021 Conference on Empirical Methods in Natural Language Processing, 3045–59.\n\n\nLin, Tsung-Yi, Michael Maire, Serge Belongie, James Hays, Pietro Perona, Deva Ramanan, Piotr Dollár, and C Lawrence Zitnick. 2014. “Microsoft Coco: Common Objects in Context.” In Computer Vision–ECCV 2014: 13th European Conference, Zurich, Switzerland, September 6-12, 2014, Proceedings, Part v 13, 740–55. Springer.\n\n\nLiu, Haotian, Chunyuan Li, Yuheng Li, and Yong Jae Lee. 2023. “Improved Baselines with Visual Instruction Tuning.” arXiv:2310.03744.\n\n\nLiu, Haotian, Chunyuan Li, Qingyang Wu, and Yong Jae Lee. 2023. “Visual Instruction Tuning.” In NeurIPS.\n\n\nMadry, Aleksander, Aleksandar Makelov, Ludwig Schmidt, Dimitris Tsipras, and Adrian Vladu. 2018. “Towards Deep Learning Models Resistant to Adversarial Attacks.” In International Conference on Learning Representations.\n\n\nNie, Weili, Brandon Guo, Yujia Huang, Chaowei Xiao, Arash Vahdat, and Animashree Anandkumar. 2022. “Diffusion Models for Adversarial Purification.” In ICML, 16805–27. PMLR.\n\n\nNiu, Zhenxing, Haodong Ren, Xinbo Gao, Gang Hua, and Rong Jin. 2024. “Jailbreaking Attack Against Multimodal Large Language Model.” arXiv Preprint arXiv:2402.02309.\n\n\nOpenAI. 2023. “GPT-4V(ision) System Card — Openai.com.” https://openai.com/research/gpt-4v-system-card.\n\n\nQi, Xiangyu, Kaixuan Huang, Ashwinee Panda, Peter Henderson, Mengdi Wang, and Prateek Mittal. 2023. “Visual Adversarial Examples Jailbreak Aligned Large Language Models.” https://arxiv.org/abs/2306.13213.\n\n\nRadford, Alec, Jong Wook Kim, Chris Hallacy, Aditya Ramesh, Gabriel Goh, Sandhini Agarwal, Girish Sastry, et al. 2021. “Learning Transferable Visual Models from Natural Language Supervision.” In ICML, 8748–63. PMLR.\n\n\nReid, Machel, Nikolay Savinov, Denis Teplyashin, Dmitry Lepikhin, Timothy Lillicrap, Jean-baptiste Alayrac, Radu Soricut, et al. 2024. “Gemini 1.5: Unlocking Multimodal Understanding Across Millions of Tokens of Context.” arXiv Preprint arXiv:2403.05530.\n\n\nRobey, Alexander, Eric Wong, Hamed Hassani, and George Pappas. 2023. “SmoothLLM: Defending Large Language Models Against Jailbreaking Attacks.” In R0-FoMo: Robustness of Few-Shot and Zero-Shot Learning in Large Foundation Models.\n\n\nSchwenk, Dustin, Apoorv Khandelwal, Christopher Clark, Kenneth Marino, and Roozbeh Mottaghi. 2022. “A-OKVQA: A Benchmark for Visual Question Answering Using World Knowledge.” In European Conference on Computer Vision, 146–62.\n\n\nShayegani, Erfan, Yue Dong, and Nael Abu-Ghazaleh. 2023. “Jailbreak in Pieces: Compositional Adversarial Attacks on Multi-Modal Language Models.” In ICLR.\n\n\nTouvron, Hugo, Louis Martin, Kevin Stone, Peter Albert, Amjad Almahairi, Yasmine Babaei, Nikolay Bashlykov, et al. 2023. “Llama 2: Open Foundation and Fine-Tuned Chat Models.” arXiv:2307.09288.\n\n\nZou, Andy, Zifan Wang, J. Zico Kolter, and Matt Fredrikson. 2023. “Universal and Transferable Adversarial Attacks on Aligned Language Models.” https://arxiv.org/abs/2307.15043."
  }
]